<?php

/**
 * Implement hook_ctools_plugin_directory().
 */
function md_panels_styles_ctools_plugin_directory($owner, $plugin_type) {
/*
 * STYLE for PANEL
 */
  if ($owner == 'panels' && $plugin_type == 'styles') {
    return 'plugins/styles';
  }
}

/**
 * Render region callback.
 *
 * - Wrapper: Element.
 * - Wrapper: Raw.
 */
function theme_panels_md_basic_render_region($vars) {
  $content = $vars['panes'];
  $settings = $vars['settings'];

/*  // Theme.
 * 
  if (!empty($settings['theme']) && $settings['theme']) {
    $output = theme('panels_default_style_render_region', $vars);
  }
  else {
    $output = implode(PHP_EOL, $content);
  }
* 
*/
  
  $output = implode(PHP_EOL, $content);
  
  // Content is wrapped AFTER sending to Panels theming. This behavior is
  // different than with panes.
  if (!empty($output)) {
    $wrapper = _panels_md_basic_wrap(!empty($settings['wrap']) ? $settings['wrap'] : array()); 
    $content_wrapper = _panels_md_basic_wrap(!empty($settings['content']) ? $settings['content'] : array());
    
  
    if (!empty($settings['container']) && $settings['container']) {
        $output = $wrapper['prefix'].'<div class="container"><div class="row">'.$content_wrapper['prefix']. $output.$content_wrapper['suffix'].'</div></div>'.$wrapper['suffix'];
      }
      else {
        $output = $wrapper['prefix'].$content_wrapper['prefix'] . $output . $content_wrapper['suffix'].$wrapper['suffix'];
      }
  }

  
  
  
  return $output;
}

/**
 * Render pane callback.
 *
 * - Wrapper: Element.
 * - Wrapper: Raw.
 */
function theme_panels_md_basic_render_pane(&$vars) { //dsm($vars);
  $content = & $vars['content'];
  $settings = $vars['settings'];

  // Content is wrapped BEFORE sending to Panels theming. This behavior is
  // different than with regions.
  if (isset($settings['wrap']) && $settings['wrap']['element'] != 'none') {
    // Add element
    $wrapper = _panels_md_basic_wrap(!empty($settings['wrap']) ? $settings['wrap'] : array());
  }

  if (!empty($content->title)) {
    $title_wrapper = _panels_md_basic_wrap(!empty($settings['title']) ? $settings['title'] : array());
    $content->title = $title_wrapper['prefix'] . $content->title . $title_wrapper['suffix'];
  }

  if (!empty($content->content)) {
    $content_wrapper = _panels_md_basic_wrap(!empty($settings['content']) ? $settings['content'] : array());
    $content->content = $content_wrapper['prefix'] . render($content->content) . $content_wrapper['suffix'];
  }

  
 /* // Theme.
  * 
  if (!empty($settings['theme']) && $settings['theme']) {
    $output = theme('panels_pane', $vars);
  }
  else {
    $title = !empty($content->title) ? $content->title : NULL;
    $content = !empty($content->content) ? $content->content : NULL;
    $wrapper_prefix = !empty($wrapper) ? $wrapper['prefix'] : NULL;
    $wrapper_suffix = !empty($wrapper) ? $wrapper['suffix'] : NULL;
    $boxed_prefix = !empty($boxed) ? $boxed['prefix'] : NULL;
    $boxed_suffix = !empty($boxed) ? $boxed['suffix'] : NULL;
    $output = $wrapper_prefix . $boxed_prefix . $title . $content . $boxed_suffix . $wrapper_suffix;
  }
  * 
  */
  
  
    $title = !empty($content->title) ? $content->title : NULL;
    $content = !empty($content->content) ? $content->content : NULL;
    $wrapper_prefix = !empty($wrapper) ? $wrapper['prefix'] : NULL;
    $wrapper_suffix = !empty($wrapper) ? $wrapper['suffix'] : NULL;
    $boxed_prefix = !empty($boxed) ? $boxed['prefix'] : NULL;
    $boxed_suffix = !empty($boxed) ? $boxed['suffix'] : NULL;
    
  if (!empty($settings['container']) && $settings['container']) {
    $output = $wrapper_prefix .'<div class="container"><div class="row">'. $title . $content.'</div></div>' . $wrapper_suffix;
  }
  else {
    $output = $wrapper_prefix . $title . $content . $wrapper_suffix;
  }
  
  
  return $output;
}

/**
 * Wrap it, wrap it real good.
 *
 * @return array
 *   Array with prefix and suffix keys.
 */
function _panels_md_basic_wrap($item = array()) {
  $wrap['prefix'] = NULL;                   //tag html
  $wrap['suffix'] = NULL;                   //close tag html
  $wrap['attributes'] = NULL;               //class tag html

  if (!empty($item['attributes'])) {
    foreach ($item['attributes'] as $key => $value) {
      if (!empty($value)) {
        $wrap['attributes'] .= " $key=\"$value\"";
      }
    }
  }

  if (!empty($item['element']) && $item['element'] != 'no_wrapper') {
    $wrap['prefix'] = '<' . $item['element'] . $wrap['attributes'] . '>';
    $wrap['suffix'] = '</' . $item['element'] . '>';
  }

  if (!empty($item['prefix'])) {
    $wrap['prefix'] = $item['prefix'];
  }
  if (!empty($item['suffix'])) {
    $wrap['suffix'] = $item['suffix'];

  }

  // Tidy.
  $wrap['prefix'] = PHP_EOL . $wrap['prefix'];
  $wrap['suffix'] = $wrap['suffix'] . PHP_EOL;

  return $wrap;
}
